from exceptions import Empty
class Arraystack:
    def __init__(self):
        self._data = []
        self._size=0
        self._front=0
    def __len(self):
        return self.size
    def is_empty(self):
        return self._size == 0
    
    def enqueue(self,e):
        self._data.append(e)
        self._size=self._size+1
    
    def dequeue(self):
        if self.is_empty():
            raise Empty("Stack is empty")
        value=self._data[self._front]
        self._data[self._front]=None
        self._front+=1
        self._size-=1
        return value
    def first(self):
        if self.is_empty():
            raise Empty("Stack is empty")
        return self._data[self._front]
q=ArrayQueue()
q.enqueue(10)
q.enqueue(20)
print('Queue', q._data)
print('length', len(q))
print('dequeue',q.dequeue())
print('Queue',q._data)
